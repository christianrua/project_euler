"""
If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
Find the sum of all the multiples of 3 or 5 below 1000.

"""

def sum_multiples_3_or_5(upper_threshold):
    acc = 0
    for i in range(upper_threshold):
        if i % 3 == 0 or i % 5 == 0:
            acc = acc + i
    return acc

#print(sum_multiples_3_or_5(10))    


"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

"""

def fibonacci_numbers_generator(upper_thresold):
    initial_values = [1,2]
    for _ in range(upper_thresold - 2):
      initial_values.append(initial_values[-2] + initial_values[-1])

    return initial_values    


def sum_even_fibonacci_numbers(upper_thresold):
    list_of_numbers = fibonacci_numbers_generator(upper_thresold)
    total_sum = 0
    for num in list_of_numbers:
        if num % 2 == 0:
            total_sum = total_sum + num
    return total_sum        

print(sum_even_fibonacci_numbers(32))